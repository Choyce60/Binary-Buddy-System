Memory (Object)
	-size
	Boolean hasBuddy
	Memory buddy
	Process A

Split()

Merge()

Main
	-LinkedList<Memory>  thingsWeNeed


//Round the input to a power of 2
//example if inputBlock = 7, return will be 8

public int roundSize (int inputBlock)
   {
        int power = 2;        
        while (power < inputBlock) {
                power = power * 2;
        }
	int blockAsPowerTwo = power;
        return blockAsPowerTwo;
   }
   
public boolean hasBuddy(Integer buddy){
  Node current = node;
  
  //go through every element/block in list checking if input equals any blocks
  //in linked list return true is hasbuddy
  while (current != null) {
  
  //check if a block equals a buddy first and check if its correct buddy linked
    if (current.buddy.equals(buddy) && current.next.buddy.equal(buddy)) {
      return true;
    } else {
      current = current.next;
    }
  }
  return false;
}

public int memoryBuddy(Integer buddy){
  Node current = node;
  
  //go through every element/block in list checking if input equals any blocks
  //in linked list
  while (current != null) {
    if (current.buddy.equals(buddy)) {
      return buddy;
    } else {
      current = current.next;
    }
  }
  return false;
}
